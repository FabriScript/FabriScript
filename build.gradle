buildscript {
    repositories {
        maven {
            name = "TomTheGeek-repo"
            url = 'http://maven.tomthegeek.ml'
        }
    }
    dependencies {
        //classpath group: 'me.geek.tom', name: 'JavaToTS', version: '1.0-SNAPSHOT', changing: true
    }
}

import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'fabric-loom' version '0.4.30'
    id 'maven-publish'
    id 'me.geek.tom.javatots' version '1.0'
    id 'net.minecrell.licenser' version '0.4.1'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

sourceSets {
    scriptApi {
        compileClasspath += main.compileClasspath
    }
    main {
        compileClasspath += scriptApi.output
        runtimeClasspath += scriptApi.output
    }
}

minecraft {
}

configurations {
    shadow
    compile.extendsFrom shadow
    shadowChanging
    shadow.extendsFrom shadowChanging
    shadowChanging.resolutionStrategy.cacheDynamicVersionsFor 1, 'hours' // Need this for dev.
}

repositories {
    maven {
        name = "TomTheGeek-repo"
        url = 'http://maven.tomthegeek.ml'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

    modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "io.github.prospector:modmenu:${project.modmenu_version}"

    shadow "org.mozilla:rhino:${project.rhino_version}"
    shadow "me.geek.tom:FabriScriptWSServer:${project.wsserver_version}"
    // Should come from FabriScriptWSServer, but I can't compile against it when its a transitive dep.
    shadow "org.java-websocket:Java-WebSocket:1.5.1"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

license {
    header = project.file('HEADER')
    ext {
        name = 'FabriScript'
        year = 2020
        owner = "Tom_The_Geek"
    }
    include '**/*.java'
}

task shadowJar(type: Jar) {
    archiveClassifier.set("dev-all")
    from sourceSets.main.output, sourceSets.scriptApi.output

    from {
        configurations.shadow.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

task remapShadowJar(type: RemapJarTask) {
    dependsOn shadowJar

    input = file("${project.buildDir}/libs/$archivesBaseName-$version-dev-all.jar")
    archiveName = "$archivesBaseName-$version-all.jar"
    addNestedDependencies = true
    archiveClassifier.set("all")
}

typescriptgen {
    apiDir project.file('src/scriptApi/java/')
    outputFile project.file('fabriscript.generated.d.ts')
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
            artifact(shadowJar) {
                builtBy shadowJar
            }
            artifact(remapShadowJar) {
                builtBy remapShadowJar
            }
        }
    }

    repositories {
        maven {
            name = "TomTheGeek-Repo"
            url = "http://maven-upload.tomthegeek.ml/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}
